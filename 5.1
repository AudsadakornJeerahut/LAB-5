#include <stdio.h>
#include <string.h>

struct studentNode {
    char name[ 20 ] ;
    int age ;
    char sex ;
    float gpa ;
    struct studentNode *next ;
} ;

void ShowAll( struct studentNode *walk );
struct studentNode *AddNode( struct studentNode **walk, char n[], int a, char s, float g ) ;
void InsertNode( struct studentNode **walk, char n[], int a, char s, float g ) ;
void DelNode( struct studentNode **walk ) ;

int main() {
    struct studentNode *start, *now ;
    start = NULL ; now = NULL ;
    now = AddNode( &start, "one", 6, 'M', 3.11 ) ; 
	ShowAll( start ) ;
	
    now = AddNode( &start, "two", 8, 'F', 3.22 ) ; 
	ShowAll( start ) ;   
	 
    InsertNode( &now, "three", 10, 'M', 3.33 ) ; 
	ShowAll( start ) ;   
	
    now = start->next ; //swap four and three 
	 
    InsertNode( &now, "four", 12, 'F', 3.44 ) ; 
	ShowAll( start ) ;  
	
	DelNode( &now ) ; 
	ShowAll( start ) ;
	
    return 0 ;
}//end function

void ShowAll( struct studentNode *walk ) {
    while (walk != NULL) {
        printf("%s ", walk->name) ;
        walk = walk->next ;
    }//end while
    printf("\n") ;
}//end ShowAll function

struct studentNode *AddNode( struct studentNode **walk, char n[], int a, char s, float g ) {
    while( *walk != NULL ) { //step 1
        walk = &(*walk)->next ;
    }//end while

    *walk = new struct studentNode ; //step 2
    strcpy( (*walk)->name, n ) ; //step 3	 
    (*walk)->age = a ;
    (*walk)->sex = s ;
    (*walk)->gpa = g ;
    (*walk)->next = *walk ;
    (*walk)->next->next = NULL ; //step 4

    return *walk ;
}//end AddNode function

void InsertNode( struct studentNode **walk, char n[], int a, char s, float g ) {	
	
	struct studentNode *temp = new struct studentNode ; //step 1
	
	strcpy(temp->name, n) ; //step 2
    temp->age = a ;
    temp->sex = s ;
    temp->gpa = g ;
  
    temp->next = (*walk)->next ; //step 3
    (*walk)->next = temp ; // step 4
    *walk = temp ;
}//end InsertNode function
   
void DelNode( struct studentNode **walk ) {
    struct studentNode *temp ;
    
    if (*walk != NULL) {
    	*walk = (*walk)->next ;
        temp = (*walk)->next ;
    }//end if
    delete *walk ;
    *walk = temp ;
}//end DelNode function
